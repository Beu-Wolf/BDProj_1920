1. with local_anomalia_count(latitude, longitude, nome, anomalia_count)
   as (select L.latitude, L.longitude, L.nome, COUNT(*)
       from (local_publico natural join item) as L, incidencia as I
       where L.id = I.item_id
       group by (latitude, longitude))
select latitude, longitude, nome
from local_anomalia_count
where anomalia_count = (select MAX(anomalia_count) from local_anomalia_count);

2. select I.email 
	    from (utilizador_regular natural join incidencia) as I, anomalia as A
		where I.anomalia_id = A.id 
		and A.tem_anomalia_redacao=False 
		and A.ts >= '2019-01-01 00:00:00' 
		and A.ts <= '2019-06-30 23:59:59' 
		group by email 
		having count(distinct A.id) >= 
		all(select count(distinct A.id) 
		from (utilizador_regular natural join incidencia) as I, anomalia as A 
		where I.anomalia_id = A.id 
		and A.tem_anomalia_redacao=False 
		and A.ts >= '2019-01-01 00:00:00' 
		and A.ts <= '2019-06-30 23:59:59' 
		group by email)


3. with north as select * from local_publico where latitude > 39.336775
   with incidencia_info as select * from item natural join incidencia natural join anomalia

	select I.email from incidencia_info as I 
	where not exists (
		select N.latitude, N.longitude from north as N 
		except select latitude, longitude from incidencia_info natural join north 
		where I.latitude = latitude and I.longitude = longitude and I.ts >= 1.1.2019 00:00 and I.ts <= 31.12.2019 23:59)


4. with correction as select * from utilizador_qualificado natural join proposta_de_correcao natural join correcao
   with south_anomalies as select * from local_publico as L natural join item natural join natural join anomalia where L.latitude < 39.336775

	select C.email from correction as C, south_anomalies as S
	where C.email = S.email and S.ts > 1.1.2019 00:00 and S.ts < 31.12.2019 23:59 
	group by C.email
	having count (distinct C.anomalia_id) < count (distinct S.anomalia_id)
