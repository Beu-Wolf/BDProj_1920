1. with local_anomalia_count(latitude, longitude, nome, anomalia_count)
   as (select L.latitude, L.longitude, L.nome, COUNT(*)
       from (local_publico natural join item) as L, incidencia as I
       where L.id = I.item_id
       group by (latitude, longitude))
select latitude, longitude, nome
from local_anomalia_count
where anomalia_count = (select MAX(anomalia_count) from local_anomalia_count);

2. select I.email 
	    from (utilizador_regular natural join incidencia) as I, anomalia as A
		where I.anomalia_id = A.id 
		and A.tem_anomalia_redacao=False 
		and A.ts >= '2019-01-01 00:00:00' 
		and A.ts <= '2019-06-30 23:59:59' 
		group by email 
		having count(distinct A.id) >= 
   all(select count(distinct A.id) 
		from (utilizador_regular natural join incidencia) as I, anomalia as A 
		where I.anomalia_id = A.id 
		and A.tem_anomalia_redacao=False 
		and A.ts >= '2019-01-01 00:00:00' 
		and A.ts <= '2019-06-30 23:59:59' 
		group by email)


3. with north 
as (select * 
	from local_publico where latitude > 39.336775), 
incidencia_info 
as (select * 
	from item as I, incidencia as N, anomalia as A 
	where N.item_id = I.id 
	and N.anomalia_id = A.id) 
select distinct email 
from (incidencia_info natural join north) as D 
where not exists 
(select latitude 
from north 
except select distinct latitude 
from (incidencia_info natural join north) 
where email = d.email 
and ts >= '2019-01-01 00:00:00' 
and ts <= '2019-12-31 23:59:59'); 


4. with south_corrections 
as (select * 
	from (proposta_de_correcao natural join correcao) as C 
	natural join incidencia as I, item as B 
	where I.item_id = B.id 
	and latitude < 39.336775), 
south_anomalies 
as (select * 
	from local_publico as L, 
	anomalia as A, incidencia as I, item as B 
	where A.id = I.anomalia_id 
	and B.id = I.item_id 
	and B.latitude = L.latitude 
	and L.longitude = B.longitude 
	and L.latitude < 39.336775) 
select C.email 
from south_corrections as C, south_anomalies as S 
where S.email = C.email 
and S.ts > '2019-01-01 00:00:00' 
and S.ts < '2019-12-31 23:59:59' 
group by C.email 
having count(distinct C.anomalia_id) < count(distinct S.anomalia_id);
